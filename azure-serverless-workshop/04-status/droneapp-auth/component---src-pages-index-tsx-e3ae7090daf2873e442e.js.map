{"version":3,"sources":["webpack:///./src/services/auth.tsx","webpack:///./src/components/spinner-basic.tsx","webpack:///./src/components/drone-status.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/services/config.js","webpack:///./src/services/adal.js"],"names":["adal","window","require","auth","login","handleUserLogin","isLoggedIn","isUserLoggedIn","getUserName","userName","logout","handleUserLogout","handleLoginCallback","handleAdalCallback","acquireTokenForAPI","handleAuthBearerRequest","any","SpinnerBasic","tokens","sectionStack","childrenGap","spinnerStack","react_default","a","createElement","Stack","Object","assign","horizontal","verticalAlign","Label","Spinner","size","SpinnerSize","medium","DroneStatusDetailsList","_React$Component","props","_this","call","this","_apiCfg","getApiConfig","fetchDroneStatusById","id","error","token","handleRequestError","setState","loading","axios","get","getApiResourceUrl","headers","Authorization","Accept","then","items","data","deviceStatusProps","keys","forEach","propName","index","push","key","property","value","catch","url","_columns","name","fieldName","minWidth","maxWidth","isResizable","state","prototype","render","_this2","_this$state","Fragment","className","SearchBox","placeholder","onSearch","droneId","spinner_basic_SpinnerBasic","DetailsList","checkboxVisibility","CheckboxVisibility","hidden","columns","selectionMode","SelectionMode","none","layoutMode","DetailsListLayoutMode","justified","selectionPreservedOnEmptyClick","React","Component","initializeIcons","classNames","classNamesFunction","getClassNames","loginActionButton","selectors",".ms-Button","margin","LoginActionButton","apply","arguments","pages_inheritsLoose","_this$props","disabled","checked","css","ActionButton","data-automation-id","iconProps","iconName","allowDisabledFocus","onClick","event","preventDefault","RestrictedContent","_React$Component2","drone_status_DroneStatusDetailsList","Link","e","titleStyle","root","fontSize","FontSizes","size42","descStyle","size18","App","horizontalAlign","verticalFill","styles","width","textAlign","color","gap","Item","align","pages_LoginActionButton","Text","pages_RestrictedContent","__webpack_require__","d","__webpack_exports__","getAdalConfig","apiId","clientId","instance","postLogoutRedirectUri","location","origin","tenant","r","_config__WEBPACK_IMPORTED_MODULE_0__","adal_angular__WEBPACK_IMPORTED_MODULE_1__","authContext","n","AuthenticationContext","getUser","getCachedUser","logOut","isCallback","hash","handleWindowCallback","getLoginError","_getItem","CONSTANTS","STORAGE","LOGIN_REQUEST","callback","acquireToken","config","msg","console","log"],"mappings":"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","file":"component---src-pages-index-tsx-e3ae7090daf2873e442e.js","sourcesContent":["// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nconst isBrowser = () => typeof window !== \"undefined\";\nconst adal = !isBrowser() ? null : require(\"./adal\");\n\ninterface Auth {\n  login(): void;\n  isLoggedIn(): boolean;\n  getUserName(): string;\n  logout(): void;\n  handleLoginCallback(): void;\n  acquireTokenForAPI(callback): void;\n}\n\nexport const auth: Auth = { \n  login: adal ? adal.handleUserLogin : () => {},\n  isLoggedIn: adal ? adal.isUserLoggedIn : () => false,\n  getUserName: adal ? adal.userName: () => \"\",\n  logout: adal ? adal.handleUserLogout : () => {},\n  handleLoginCallback: adal ? adal.handleAdalCallback : () => {},\n  acquireTokenForAPI: adal ? adal.handleAuthBearerRequest : (any) => {}\n};","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport React from \"react\"\nimport { IStackProps, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\n\nexport const SpinnerBasic: React.StatelessComponent = () => {\n\n  const rowProps: IStackProps = { horizontal: true, verticalAlign: 'center' };\n\n  const tokens = {\n    sectionStack: {\n      childrenGap: 10\n    },\n    spinnerStack: {\n      childrenGap: 20\n    }\n  };\n\n  return (\n    <Stack tokens={tokens.sectionStack}>\n      <Stack {...rowProps} tokens={tokens.spinnerStack}>\n        <Label>Loading...</Label>\n        <Spinner size={SpinnerSize.medium} />\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default SpinnerBasic;\n  ","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport React from \"react\"\nimport axios from \"axios\"\n\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox'\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, CheckboxVisibility, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\n\nimport { SpinnerBasic } from \"./spinner-basic\"\n\nimport { getApiConfig } from \"../services/config\"\nimport { auth } from \"../services/auth\"\n\nexport interface IDroneStatusDetailsListItem {\n  key: number;\n  property: string;\n  value: number;\n}\n\nexport interface IDroneStatusDetailsListState {\n  items: IDroneStatusDetailsListItem[];\n  loading: boolean,\n  error: boolean\n}\n\nexport class DroneStatusDetailsList extends React.Component<{}, IDroneStatusDetailsListState> {\n  private _columns: IColumn[];\n  private _apiCfg = getApiConfig();\n\n  constructor(props: {}) {\n    super(props);\n\n    this._columns = [\n      {\n        key: 'column1',\n        name: 'Property',\n        fieldName: 'property',\n        minWidth: 100,\n        maxWidth: 200,\n        isResizable: true\n      },\n      {\n        key: 'column2',\n        name: 'Value',\n        fieldName: 'value',\n        minWidth: 100,\n        maxWidth: 200,\n        isResizable: true\n      }\n    ];\n\n    this.state = {\n      items: [],\n      loading: false,\n      error: false\n    };\n  }\n  \n  public render(): JSX.Element {\n    const { items, error } = this.state;\n\n    return (\n      <>\n        <div className=\"ms-SearchBoxExample\">\n          <SearchBox\n            placeholder=\"enter drone Id\"\n            onSearch={droneId => this.fetchDroneStatusById(droneId)}\n          />\n        </div>\n        {this.state.loading ? (\n          <SpinnerBasic />\n        ) : items && !error ? (\n          <DetailsList\n            checkboxVisibility={CheckboxVisibility.hidden}\n            items={items}\n            columns={this._columns}\n            selectionMode={SelectionMode.none}\n            layoutMode={DetailsListLayoutMode.justified}\n            selectionPreservedOnEmptyClick={true}\n          />\n        ) : (\n              <p>Error getting drone status</p>\n            )}\n      </>\n    );\n  }\n\n  // This data is fetched at run time on the client.\n  fetchDroneStatusById = (id) => {\n    auth.acquireTokenForAPI((error, token) => {\n      if (error)\n      {\n        this.handleRequestError(error)\n        return;\n      }\n\n      this.setState({ loading: true })\n\n      axios\n        .get(this.getApiResourceUrl(id),\n          {\n            headers: {\n              'Authorization': 'Bearer ' + token,\n              'Accept': 'application/json'\n            }\n          }\n        )\n        .then(items => {\n          const {\n            data\n          } = items\n\n          let deviceStatusProps = [];\n          Object.keys(data).forEach(function(propName, index) {\n            deviceStatusProps.push({\n              key: index,\n              property: propName,\n              value: data[propName]\n            });\n          });\n          \n          this.setState({\n            loading: false,\n            items: deviceStatusProps,\n            error: false\n          })\n        })\n        .catch(error => {\n          this.handleRequestError(error)\n        })\n    });\n  }\n\n  handleRequestError = (error) => {\n    this.setState({ loading: false, error })\n  }\n  \n  getApiResourceUrl = (id: string): string => `${this._apiCfg.url}${id}`;\n}\n\nexport default DroneStatusDetailsList","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport React from \"react\"\nimport { ActionButton, css, classNamesFunction, IButtonProps, IStyle, Stack, Text, Link } from \"office-ui-fabric-react\"\nimport { FontSizes } from '@uifabric/fluent-theme/lib/fluent/FluentType';\nimport { initializeIcons } from '@uifabric/icons';\ninitializeIcons();\n\nimport { auth } from \"../services/auth\"\n\nimport { DroneStatusDetailsList } from \"../components/drone-status\"\n\ntype IndexStyleProps = {};\n\ninterface IndexStyles {\n  mainStackContent?: IStyle;\n  loginActionButton?: IStyle;\n}\n\nconst mainPageStyles: IndexStyles = {\n loginActionButton: [\n    'ms-BasicButtonsExample',\n    {\n      selectors: {\n        '.ms-Button': {\n          margin: '10px 0'\n        }\n      }\n    }\n  ]\n};\n\nconst getClassNames = classNamesFunction<IndexStyleProps, IndexStyles>();\nconst classNames = getClassNames(mainPageStyles, {});\n\nexport class LoginActionButton extends React.Component<IButtonProps> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n\n    return (\n      <div className={css(classNames.loginActionButton)}>\n          {auth.isLoggedIn() ? (\n            <ActionButton\n            data-automation-id=\"test\"\n            iconProps={{ iconName: 'AddFriend' }}\n            allowDisabledFocus={true}\n            disabled={disabled}\n            checked={checked}\n            onClick={event => {\n              event.preventDefault()\n              auth.logout()\n              }}>\n              Sign out ({auth.getUserName()})\n            </ActionButton>\n          ) : (\n            <ActionButton\n            data-automation-id=\"test\"\n            iconProps={{ iconName: 'AddFriend' }}\n            allowDisabledFocus={true}\n            disabled={disabled}\n            checked={checked}\n            onClick={event => {\n              event.preventDefault()\n              auth.login()\n              }}>\n              Sign in\n            </ActionButton>\n          )}\n      </div>\n    );\n  }\n}\n\nexport class RestrictedContent extends React.Component {\n  public render(): JSX.Element {\n    return (\n        <div>\n          {auth.isLoggedIn() ? (\n            <>\n              <DroneStatusDetailsList />\n            </>\n          ): (\n            <>\n              You should <Link onClick={e => {\n              e.preventDefault()\n              auth.login()\n              }}>Sign in</Link> to see restricted\n              content!\n            </>\n          )}\n        </div>\n    );\n  }\n}\nconst titleStyle = { root: { fontSize: FontSizes.size42 } }\nconst descStyle = { root: { fontSize: FontSizes.size18 } }\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Stack\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      verticalFill\n      styles={{\n        root: {\n          width: \"960px\",\n          margin: \"0 auto\",\n          textAlign: \"center\",\n          color: \"#605e5c\",\n        },\n      }}\n      gap={15}>\n      {auth.handleLoginCallback()}\n      <Stack.Item align=\"end\">\n        <LoginActionButton />\n      </Stack.Item>\n      <Stack.Item align=\"start\">\n        <Text styles={titleStyle}>\n          Welcome to Fabrikam Drone Status App\n        </Text>\n      </Stack.Item>\n      <Stack.Item align=\"start\">\n        <Text styles={descStyle}>\n        This sample demonstrates how to authenticate a serverless API.\n        </Text>\n      </Stack.Item>\n      <Stack.Item align=\"start\">\n        <RestrictedContent />\n      </Stack.Item>\n    </Stack>\n  )\n}\n\nexport default App","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nexport const getAdalConfig = () => {\n  return {\n    apiId: \"[APP_ID]\",\n    clientId: \"[CLIENT_ID]\",\n    instance: `https://login.microsoftonline.com/`,\n    postLogoutRedirectUri: window.location.origin,\n    tenant: \"[TENANT_ID]\",\n  };\n}\n\nexport const getApiConfig = () =>\n{\n  return {\n    url: \"[API_URL]\"\n  };\n}","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport { getAdalConfig } from './config';\nimport AuthenticationContext from 'adal-angular'\n\nconst logErrorMessage = (msg) => {\n  // TODO send to AppInsights\n  console.log(msg);\n}\n\nlet authContext = new AuthenticationContext(getAdalConfig()); \n\nconst getUser = () => authContext.getCachedUser();\n\nexport const isUserLoggedIn = () => getUser() ? true : false;\nexport const userName = () => getUser().userName;\nexport const handleUserLogin = () => authContext.login();\nexport const handleUserLogout = () => authContext.logOut();\nexport const handleAdalCallback = () => {\n  var isCallback = authContext.isCallback(window.location.hash);\n  authContext.handleWindowCallback();\n  \n  if (isCallback && !authContext.getLoginError()) {\n      window.location = authContext._getItem(authContext.CONSTANTS.STORAGE.LOGIN_REQUEST);\n  }\n}\nexport const handleAuthBearerRequest = callback => {\n  authContext.acquireToken(authContext.config.apiId, function (error, token) {\n    \n    if (error || !token) {\n      logErrorMessage('error occurred: ' + error);\n    }\n\n    callback(error, token);\n  });\n}"],"sourceRoot":""}