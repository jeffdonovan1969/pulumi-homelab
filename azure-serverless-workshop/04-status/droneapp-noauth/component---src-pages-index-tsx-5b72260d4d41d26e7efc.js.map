{"version":3,"sources":["webpack:///./src/components/spinner-basic.tsx","webpack:///./src/services/config.js","webpack:///./src/components/drone-status.tsx","webpack:///./src/pages/index.tsx"],"names":["SpinnerBasic","tokens","sectionStack","childrenGap","spinnerStack","react_default","a","createElement","Stack","Object","assign","horizontal","verticalAlign","Label","Spinner","size","SpinnerSize","medium","getApiConfig","url","DroneStatusDetailsList","_React$Component","props","_this","call","this","_apiCfg","fetchDroneStatusById","id","setState","loading","axios","get","getApiResourceUrl","headers","Accept","then","items","data","deviceStatusProps","keys","forEach","propName","index","push","key","property","value","error","catch","handleRequestError","_columns","name","fieldName","minWidth","maxWidth","isResizable","state","prototype","render","_this2","_this$state","Fragment","className","SearchBox","placeholder","onSearch","droneId","spinner_basic_SpinnerBasic","DetailsList","checkboxVisibility","CheckboxVisibility","hidden","columns","selectionMode","SelectionMode","none","layoutMode","DetailsListLayoutMode","justified","selectionPreservedOnEmptyClick","React","Component","initializeIcons","classNamesFunction","getClassNames","loginActionButton","selectors",".ms-Button","margin","titleStyle","root","fontSize","FontSizes","size42","descStyle","size18","App","horizontalAlign","verticalFill","styles","width","textAlign","color","gap","Item","align","Text","drone_status_DroneStatusDetailsList"],"mappings":"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","file":"component---src-pages-index-tsx-5b72260d4d41d26e7efc.js","sourcesContent":["// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport React from \"react\"\nimport { IStackProps, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\n\nexport const SpinnerBasic: React.StatelessComponent = () => {\n\n  const rowProps: IStackProps = { horizontal: true, verticalAlign: 'center' };\n\n  const tokens = {\n    sectionStack: {\n      childrenGap: 10\n    },\n    spinnerStack: {\n      childrenGap: 20\n    }\n  };\n\n  return (\n    <Stack tokens={tokens.sectionStack}>\n      <Stack {...rowProps} tokens={tokens.spinnerStack}>\n        <Label>Loading...</Label>\n        <Spinner size={SpinnerSize.medium} />\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default SpinnerBasic;\n  ","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nexport const getApiConfig = () =>\n{\n  return {\n    url: \"[API_URL]\"\n  };\n}","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport React from \"react\"\nimport axios from \"axios\"\n\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox'\nimport { DetailsList, DetailsListLayoutMode, SelectionMode, CheckboxVisibility, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\n\nimport { SpinnerBasic } from \"./spinner-basic\"\n\nimport { getApiConfig } from \"../services/config\"\n\nexport interface IDroneStatusDetailsListItem {\n  key: number;\n  property: string;\n  value: number;\n}\n\nexport interface IDroneStatusDetailsListState {\n  items: IDroneStatusDetailsListItem[];\n  loading: boolean,\n  error: boolean\n}\n\nexport class DroneStatusDetailsList extends React.Component<{}, IDroneStatusDetailsListState> {\n  private _columns: IColumn[];\n  private _apiCfg = getApiConfig();\n\n  constructor(props: {}) {\n    super(props);\n\n    this._columns = [\n      {\n        key: 'column1',\n        name: 'Property',\n        fieldName: 'property',\n        minWidth: 100,\n        maxWidth: 200,\n        isResizable: true\n      },\n      {\n        key: 'column2',\n        name: 'Value',\n        fieldName: 'value',\n        minWidth: 100,\n        maxWidth: 200,\n        isResizable: true\n      }\n    ];\n\n    this.state = {\n      items: [],\n      loading: false,\n      error: false\n    };\n  }\n  \n  public render(): JSX.Element {\n    const { items, error } = this.state;\n\n    return (\n      <>\n        <div className=\"ms-SearchBoxExample\">\n          <SearchBox\n            placeholder=\"enter drone Id\"\n            onSearch={droneId => this.fetchDroneStatusById(droneId)}\n          />\n        </div>\n        {this.state.loading ? (\n          <SpinnerBasic />\n        ) : items && !error ? (\n          <DetailsList\n            checkboxVisibility={CheckboxVisibility.hidden}\n            items={items}\n            columns={this._columns}\n            selectionMode={SelectionMode.none}\n            layoutMode={DetailsListLayoutMode.justified}\n            selectionPreservedOnEmptyClick={true}\n          />\n        ) : (\n              <p>Error getting drone status</p>\n            )}\n      </>\n    );\n  }\n\n  // This data is fetched at run time on the client.\n  fetchDroneStatusById = (id) => {\n      this.setState({ loading: true })\n\n      axios\n        .get(this.getApiResourceUrl(id),\n          {\n            headers: {\n              'Accept': 'application/json'\n            }\n          }\n        )\n        .then(items => {\n          const {\n            data\n          } = items\n\n          let deviceStatusProps = [];\n          Object.keys(data).forEach(function(propName, index) {\n            deviceStatusProps.push({\n              key: index,\n              property: propName,\n              value: data[propName]\n            });\n          });\n          \n          this.setState({\n            loading: false,\n            items: deviceStatusProps,\n            error: false\n          })\n        })\n        .catch(error => {\n          this.handleRequestError(error)\n        })\n\n  }\n\n  handleRequestError = (error) => {\n    this.setState({ loading: false, error })\n  }\n  \n  getApiResourceUrl = (id: string): string => `${this._apiCfg.url}${id}`;\n}\n\nexport default DroneStatusDetailsList","// ------------------------------------------------------------\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.\n// ------------------------------------------------------------\n\nimport React from \"react\"\nimport { ActionButton, css, classNamesFunction, IButtonProps, IStyle, Stack, Text, Link } from \"office-ui-fabric-react\"\nimport { FontSizes } from '@uifabric/fluent-theme/lib/fluent/FluentType';\nimport { initializeIcons } from '@uifabric/icons';\ninitializeIcons();\n\nimport { DroneStatusDetailsList } from \"../components/drone-status\"\n\ntype IndexStyleProps = {};\n\ninterface IndexStyles {\n  mainStackContent?: IStyle;\n  loginActionButton?: IStyle;\n}\n\nconst mainPageStyles: IndexStyles = {\n loginActionButton: [\n    'ms-BasicButtonsExample',\n    {\n      selectors: {\n        '.ms-Button': {\n          margin: '10px 0'\n        }\n      }\n    }\n  ]\n};\n\nconst getClassNames = classNamesFunction<IndexStyleProps, IndexStyles>();\nconst classNames = getClassNames(mainPageStyles, {});\n\n\nconst titleStyle = { root: { fontSize: FontSizes.size42 } }\nconst descStyle = { root: { fontSize: FontSizes.size18 } }\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Stack\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      verticalFill\n      styles={{\n        root: {\n          width: \"960px\",\n          margin: \"0 auto\",\n          textAlign: \"center\",\n          color: \"#605e5c\",\n        },\n      }}\n      gap={15}>\n      <Stack.Item align=\"end\">\n      </Stack.Item>\n      <Stack.Item align=\"start\">\n        <Text styles={titleStyle}>\n          Welcome to Fabrikam Drone Status App\n        </Text>\n      </Stack.Item>\n      <Stack.Item align=\"start\">\n        <Text styles={descStyle}>\n        This sample demonstrates how to call a serverless API.\n        </Text>\n      </Stack.Item>\n      <Stack.Item align=\"start\">\n        <DroneStatusDetailsList />\n      </Stack.Item>\n    </Stack>\n  )\n}\n\nexport default App"],"sourceRoot":""}